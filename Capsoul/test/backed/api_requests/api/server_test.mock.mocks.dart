// Mocks generated by Mockito 5.4.5 from annotations
// in capsoul/test/backed/api_requests/api/server_test.mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:convert' as _i4;
import 'dart:typed_data' as _i6;

import 'package:capsoul/backend/database/transcript_segment.dart' as _i9;
import 'package:capsoul/backend/preferences.dart' as _i7;
import 'package:capsoul/backend/schema/plugin.dart' as _i8;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i4.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i3.Future<_i2.Response>.value(_FakeResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i3.Future<_i2.Response>);

  @override
  _i3.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<_i6.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i3.Future<_i6.Uint8List>.value(_i6.Uint8List(0)),
      ) as _i3.Future<_i6.Uint8List>);

  @override
  _i3.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i3.Future<_i2.StreamedResponse>.value(_FakeStreamedResponse_1(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i3.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SharedPreferencesUtil].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesUtil extends _i1.Mock
    implements _i7.SharedPreferencesUtil {
  MockSharedPreferencesUtil() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set uid(String? value) => super.noSuchMethod(
        Invocation.setter(
          #uid,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get uid => (super.noSuchMethod(
        Invocation.getter(#uid),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#uid),
        ),
      ) as String);

  @override
  set deviceId(String? value) => super.noSuchMethod(
        Invocation.setter(
          #deviceId,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get deviceId => (super.noSuchMethod(
        Invocation.getter(#deviceId),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#deviceId),
        ),
      ) as String);

  @override
  bool get showDisconnectionNotification => (super.noSuchMethod(
        Invocation.getter(#showDisconnectionNotification),
        returnValue: false,
      ) as bool);

  @override
  set showDisconnectionNotification(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #showDisconnectionNotification,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set notificationPermissionRequested(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #notificationPermissionRequested,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get notificationPermissionRequested => (super.noSuchMethod(
        Invocation.getter(#notificationPermissionRequested),
        returnValue: false,
      ) as bool);

  @override
  set locationPermissionRequested(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #locationPermissionRequested,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get locationPermissionRequested => (super.noSuchMethod(
        Invocation.getter(#locationPermissionRequested),
        returnValue: false,
      ) as bool);

  @override
  set bluetoothPermissionRequested(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #bluetoothPermissionRequested,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get bluetoothPermissionRequested => (super.noSuchMethod(
        Invocation.getter(#bluetoothPermissionRequested),
        returnValue: false,
      ) as bool);

  @override
  set deviceName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #deviceName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get deviceName => (super.noSuchMethod(
        Invocation.getter(#deviceName),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#deviceName),
        ),
      ) as String);

  @override
  bool get isDeviceConnected => (super.noSuchMethod(
        Invocation.getter(#isDeviceConnected),
        returnValue: false,
      ) as bool);

  @override
  set isDeviceConnected(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isDeviceConnected,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get openAIApiKey => (super.noSuchMethod(
        Invocation.getter(#openAIApiKey),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#openAIApiKey),
        ),
      ) as String);

  @override
  set openAIApiKey(String? value) => super.noSuchMethod(
        Invocation.setter(
          #openAIApiKey,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get deepgramApiKey => (super.noSuchMethod(
        Invocation.getter(#deepgramApiKey),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#deepgramApiKey),
        ),
      ) as String);

  @override
  String get groqApiKey => (super.noSuchMethod(
        Invocation.getter(#groqApiKey),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#groqApiKey),
        ),
      ) as String);

  @override
  set groqApiKey(String? value) => super.noSuchMethod(
        Invocation.setter(
          #groqApiKey,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set deepgramApiKey(String? value) => super.noSuchMethod(
        Invocation.setter(
          #deepgramApiKey,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get useTranscriptServer => (super.noSuchMethod(
        Invocation.getter(#useTranscriptServer),
        returnValue: false,
      ) as bool);

  @override
  set useTranscriptServer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #useTranscriptServer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get gcpCredentials => (super.noSuchMethod(
        Invocation.getter(#gcpCredentials),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#gcpCredentials),
        ),
      ) as String);

  @override
  set gcpCredentials(String? value) => super.noSuchMethod(
        Invocation.setter(
          #gcpCredentials,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get gcpBucketName => (super.noSuchMethod(
        Invocation.getter(#gcpBucketName),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#gcpBucketName),
        ),
      ) as String);

  @override
  set gcpBucketName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #gcpBucketName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get webhookOnMemoryCreated => (super.noSuchMethod(
        Invocation.getter(#webhookOnMemoryCreated),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#webhookOnMemoryCreated),
        ),
      ) as String);

  @override
  set webhookOnMemoryCreated(String? value) => super.noSuchMethod(
        Invocation.setter(
          #webhookOnMemoryCreated,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isPromptSaved => (super.noSuchMethod(
        Invocation.getter(#isPromptSaved),
        returnValue: false,
      ) as bool);

  @override
  set isPromptSaved(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isPromptSaved,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get webhookOnTranscriptReceived => (super.noSuchMethod(
        Invocation.getter(#webhookOnTranscriptReceived),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#webhookOnTranscriptReceived),
        ),
      ) as String);

  @override
  set webhookOnTranscriptReceived(String? value) => super.noSuchMethod(
        Invocation.setter(
          #webhookOnTranscriptReceived,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get recordingsLanguage => (super.noSuchMethod(
        Invocation.getter(#recordingsLanguage),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#recordingsLanguage),
        ),
      ) as String);

  @override
  set recordingsLanguage(String? value) => super.noSuchMethod(
        Invocation.setter(
          #recordingsLanguage,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get useFriendApiKeys => (super.noSuchMethod(
        Invocation.getter(#useFriendApiKeys),
        returnValue: false,
      ) as bool);

  @override
  set useFriendApiKeys(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #useFriendApiKeys,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get onboardingCompleted => (super.noSuchMethod(
        Invocation.getter(#onboardingCompleted),
        returnValue: false,
      ) as bool);

  @override
  set onboardingCompleted(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #onboardingCompleted,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get customWebsocketUrl => (super.noSuchMethod(
        Invocation.getter(#customWebsocketUrl),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#customWebsocketUrl),
        ),
      ) as String);

  @override
  set customWebsocketUrl(String? value) => super.noSuchMethod(
        Invocation.setter(
          #customWebsocketUrl,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get optInAnalytics => (super.noSuchMethod(
        Invocation.getter(#optInAnalytics),
        returnValue: false,
      ) as bool);

  @override
  set optInAnalytics(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #optInAnalytics,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get devModeEnabled => (super.noSuchMethod(
        Invocation.getter(#devModeEnabled),
        returnValue: false,
      ) as bool);

  @override
  set devModeEnabled(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #devModeEnabled,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get coachNotificationIsChecked => (super.noSuchMethod(
        Invocation.getter(#coachNotificationIsChecked),
        returnValue: false,
      ) as bool);

  @override
  set coachNotificationIsChecked(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #coachNotificationIsChecked,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get postMemoryNotificationIsChecked => (super.noSuchMethod(
        Invocation.getter(#postMemoryNotificationIsChecked),
        returnValue: false,
      ) as bool);

  @override
  set postMemoryNotificationIsChecked(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #postMemoryNotificationIsChecked,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get reconnectNotificationIsChecked => (super.noSuchMethod(
        Invocation.getter(#reconnectNotificationIsChecked),
        returnValue: false,
      ) as bool);

  @override
  set reconnectNotificationIsChecked(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #reconnectNotificationIsChecked,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get recordingPaths => (super.noSuchMethod(
        Invocation.getter(#recordingPaths),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set recordingPaths(List<String>? value) => super.noSuchMethod(
        Invocation.setter(
          #recordingPaths,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasSpeakerProfile => (super.noSuchMethod(
        Invocation.getter(#hasSpeakerProfile),
        returnValue: false,
      ) as bool);

  @override
  set hasSpeakerProfile(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #hasSpeakerProfile,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i8.Plugin> get pluginsList => (super.noSuchMethod(
        Invocation.getter(#pluginsList),
        returnValue: <_i8.Plugin>[],
      ) as List<_i8.Plugin>);

  @override
  set pluginsList(List<_i8.Plugin>? value) => super.noSuchMethod(
        Invocation.setter(
          #pluginsList,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<String> get pluginsEnabled => (super.noSuchMethod(
        Invocation.getter(#pluginsEnabled),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set pluginsEnabled(List<String>? value) => super.noSuchMethod(
        Invocation.setter(
          #pluginsEnabled,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get selectedChatPluginId => (super.noSuchMethod(
        Invocation.getter(#selectedChatPluginId),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#selectedChatPluginId),
        ),
      ) as String);

  @override
  set selectedChatPluginId(String? value) => super.noSuchMethod(
        Invocation.setter(
          #selectedChatPluginId,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i9.TranscriptSegment> get transcriptSegments => (super.noSuchMethod(
        Invocation.getter(#transcriptSegments),
        returnValue: <_i9.TranscriptSegment>[],
      ) as List<_i9.TranscriptSegment>);

  @override
  set transcriptSegments(List<_i9.TranscriptSegment>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #transcriptSegments,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get lastDailySummaryDay => (super.noSuchMethod(
        Invocation.getter(#lastDailySummaryDay),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#lastDailySummaryDay),
        ),
      ) as String);

  @override
  set lastDailySummaryDay(String? value) => super.noSuchMethod(
        Invocation.setter(
          #lastDailySummaryDay,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get notificationPlugin => (super.noSuchMethod(
        Invocation.getter(#notificationPlugin),
        returnValue: false,
      ) as bool);

  @override
  set notificationPlugin(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #notificationPlugin,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get tosAccepted => (super.noSuchMethod(
        Invocation.getter(#tosAccepted),
        returnValue: false,
      ) as bool);

  @override
  set tosAccepted(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #tosAccepted,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get backupsEnabled => (super.noSuchMethod(
        Invocation.getter(#backupsEnabled),
        returnValue: false,
      ) as bool);

  @override
  set backupsEnabled(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #backupsEnabled,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasSeenTutorial => (super.noSuchMethod(
        Invocation.getter(#hasSeenTutorial),
        returnValue: false,
      ) as bool);

  @override
  set hasSeenTutorial(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #hasSeenTutorial,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set scriptCategoriesAndEmojisExecuted(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #scriptCategoriesAndEmojisExecuted,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get scriptCategoriesAndEmojisExecuted => (super.noSuchMethod(
        Invocation.getter(#scriptCategoriesAndEmojisExecuted),
        returnValue: false,
      ) as bool);

  @override
  set scriptMemoryVectorsExecuted(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #scriptMemoryVectorsExecuted,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get scriptMemoryVectorsExecuted => (super.noSuchMethod(
        Invocation.getter(#scriptMemoryVectorsExecuted),
        returnValue: false,
      ) as bool);

  @override
  set scriptMemoriesToObjectBoxExecuted(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #scriptMemoriesToObjectBoxExecuted,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get scriptMemoriesToObjectBoxExecuted => (super.noSuchMethod(
        Invocation.getter(#scriptMemoriesToObjectBoxExecuted),
        returnValue: false,
      ) as bool);

  @override
  set pageToShowFromNotification(int? value) => super.noSuchMethod(
        Invocation.setter(
          #pageToShowFromNotification,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get pageToShowFromNotification => (super.noSuchMethod(
        Invocation.getter(#pageToShowFromNotification),
        returnValue: 0,
      ) as int);

  @override
  set subPageToShowFromNotification(String? value) => super.noSuchMethod(
        Invocation.setter(
          #subPageToShowFromNotification,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get subPageToShowFromNotification => (super.noSuchMethod(
        Invocation.getter(#subPageToShowFromNotification),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#subPageToShowFromNotification),
        ),
      ) as String);

  @override
  set calendarEnabled(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #calendarEnabled,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get calendarEnabled => (super.noSuchMethod(
        Invocation.getter(#calendarEnabled),
        returnValue: false,
      ) as bool);

  @override
  set developerOptionEnabled(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #developerOptionEnabled,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get developerOptionEnabled => (super.noSuchMethod(
        Invocation.getter(#developerOptionEnabled),
        returnValue: false,
      ) as bool);

  @override
  set calendarId(String? value) => super.noSuchMethod(
        Invocation.setter(
          #calendarId,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get calendarId => (super.noSuchMethod(
        Invocation.getter(#calendarId),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#calendarId),
        ),
      ) as String);

  @override
  set calendarType(String? value) => super.noSuchMethod(
        Invocation.setter(
          #calendarType,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get calendarType => (super.noSuchMethod(
        Invocation.getter(#calendarType),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#calendarType),
        ),
      ) as String);

  @override
  bool get firstTranscriptMade => (super.noSuchMethod(
        Invocation.getter(#firstTranscriptMade),
        returnValue: false,
      ) as bool);

  @override
  set firstTranscriptMade(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #firstTranscriptMade,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get authToken => (super.noSuchMethod(
        Invocation.getter(#authToken),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#authToken),
        ),
      ) as String);

  @override
  set authToken(String? value) => super.noSuchMethod(
        Invocation.setter(
          #authToken,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#email),
        ),
      ) as String);

  @override
  set email(String? value) => super.noSuchMethod(
        Invocation.setter(
          #email,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get givenName => (super.noSuchMethod(
        Invocation.getter(#givenName),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#givenName),
        ),
      ) as String);

  @override
  set givenName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #givenName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get familyName => (super.noSuchMethod(
        Invocation.getter(#familyName),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#familyName),
        ),
      ) as String);

  @override
  set familyName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #familyName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get fullName => (super.noSuchMethod(
        Invocation.getter(#fullName),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#fullName),
        ),
      ) as String);

  @override
  set zapierApiKey(String? value) => super.noSuchMethod(
        Invocation.setter(
          #zapierApiKey,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get zapierApiKey => (super.noSuchMethod(
        Invocation.getter(#zapierApiKey),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#zapierApiKey),
        ),
      ) as String);

  @override
  set zapierWebhookUrl(String? value) => super.noSuchMethod(
        Invocation.setter(
          #zapierWebhookUrl,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get zapierWebhookUrl => (super.noSuchMethod(
        Invocation.getter(#zapierWebhookUrl),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#zapierWebhookUrl),
        ),
      ) as String);

  @override
  set zapierEnabled(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #zapierEnabled,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get zapierEnabled => (super.noSuchMethod(
        Invocation.getter(#zapierEnabled),
        returnValue: false,
      ) as bool);

  @override
  String gptCompletionCache(String? key) => (super.noSuchMethod(
        Invocation.method(
          #gptCompletionCache,
          [key],
        ),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #gptCompletionCache,
            [key],
          ),
        ),
      ) as String);

  @override
  dynamic setGptCompletionCache(
    String? key,
    String? value,
  ) =>
      super.noSuchMethod(Invocation.method(
        #setGptCompletionCache,
        [
          key,
          value,
        ],
      ));

  @override
  dynamic enablePlugin(String? value) => super.noSuchMethod(Invocation.method(
        #enablePlugin,
        [value],
      ));

  @override
  dynamic disablePlugin(String? value) => super.noSuchMethod(Invocation.method(
        #disablePlugin,
        [value],
      ));

  @override
  _i3.Future<bool> saveString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  _i3.Future<bool> saveInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  _i3.Future<bool> saveBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  _i3.Future<bool> saveApiType(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveApiType,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> saveCodecType(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCodecType,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> updateKeywordDetectionStatus(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateKeywordDetectionStatus,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  String? getApiType(String? key) => (super.noSuchMethod(Invocation.method(
        #getApiType,
        [key],
      )) as String?);

  @override
  String getCodecType(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getCodecType,
          [key],
        ),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #getCodecType,
            [key],
          ),
        ),
      ) as String);

  @override
  _i3.Future<bool> saveDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  _i3.Future<bool> saveStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  String getKeywordDetectionStatus(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getKeywordDetectionStatus,
          [key],
        ),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #getKeywordDetectionStatus,
            [key],
          ),
        ),
      ) as String);

  @override
  List<String> getSelectedKeywords() => (super.noSuchMethod(
        Invocation.method(
          #getSelectedKeywords,
          [],
        ),
        returnValue: <String>[],
      ) as List<String>);

  @override
  _i3.Future<bool> saveSelectedPrompt(
    String? key,
    String? selectedValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSelectedPrompt,
          [
            key,
            selectedValue,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  String? getSelectedPrompt(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getSelectedPrompt,
        [key],
      )) as String?);

  @override
  _i3.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
